{"version":3,"sources":["images/icons sync /^/.//.*/.svg$","images/icons/cog.svg","images/icons/eject.svg","images/icons/io.svg","images/icons/pause.svg","images/icons/play.svg","images/icons/rotate.svg","images/icons/stop.svg","pages/settings/Settings.js","lib/colors.js","components/icon/Icon.js","components/button/Button.js","hooks/useKeyboard.js","hooks/useAnimationEvent.js","hooks/useAnimationFrame.js","lib/object.js","lib/util.js","lib/timer.js","components/timer/Timer.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Settings","timerDuration","timerThreshold","setTimerDuration","timerDirection","setTimerThreshold","setTimerDirection","renderTimeSegmentInput","segmentKey","timeObj","onChange","type","className","value","target","htmlFor","checked","generateIterator","colorNames","colorLevels","count","level","name","materialUiColors","flatMap","concat","flattenColorMap","iterator","resolveColor","color","colors","next","Icon","size","style","src","require","default","baseIconProps","iconPropMap","play","marginRight","marginLeft","stop","pause","eject","transform","rotate","io","marginTop","cog","Button","text","icon","tooltip","props","useKeyboard","listener","useEffect","keyListener","keyCode","document","addEventListener","removeEventListener","animationHandler","callback","animationName","useAnimationEvent","onStart","onEnd","dependencies","onAnimationStart","onAnimationEnd","useAnimationFrame","tickCallback","stopPredicate","reqId","window","requestAnimationFrame","step","cancelAnimationFrame","patch","obj","newObj","assign","durationAsString","time","withSign","durationAsMap","hours","minutes","seconds","milliseconds","join","parseSegment","timestamp","padLength","str","length","padStart","padNumber","Math","abs","mapAsDuration","init","direction","duration","stateSnapshot","threshold","eventsSnapshot","state","events","setState","newState","patchState","setEvents","newEvents","resolveLaps","reduce","accum","index","arr","prevType","prevTimestamp","includes","push","endTime","startTime","getEvents","getState","getLaps","_getEllapsedTime","filter","running","paused","Date","now","getEllapsedTime","ellapsedTime","getEllapsedTimeString","command","actionFn","eventPredicate","start","resume","lap","abortLap","pop","clear","Timer","initialTime","lapThreshold","useLocalStorage","timerState","setTimerState","timerEvents","setTimerEvents","countdownTimer","timer","useState","notification","setNotification","laps","setLaps","isThresholdAnimationActive","setThresholdAnimationActive","setEllapsedTime","patchUnmarshalledTimerState","commandIconMap","renderButton","onMouseDown","ReactTooltip","rebuild","animation","lapsSum","backgroundColor","paddingLeft","toLocaleString","call","App","isSettingsVisible","setSettingsVisible","place","effect","delayShow","border","multiline","onClick","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.445a304d.chunk.js","sourcesContent":["var map = {\n\t\"./cog.svg\": 55,\n\t\"./eject.svg\": 56,\n\t\"./io.svg\": 57,\n\t\"./pause.svg\": 58,\n\t\"./play.svg\": 59,\n\t\"./rotate.svg\": 60,\n\t\"./stop.svg\": 61\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 54;","export default __webpack_public_path__ + \"static/media/cog.e2313a2c.svg\";","export default __webpack_public_path__ + \"static/media/eject.354fd176.svg\";","export default __webpack_public_path__ + \"static/media/io.e1eac377.svg\";","export default __webpack_public_path__ + \"static/media/pause.c6c6d87e.svg\";","export default __webpack_public_path__ + \"static/media/play.a7affebc.svg\";","export default __webpack_public_path__ + \"static/media/rotate.a9a72b5f.svg\";","export default __webpack_public_path__ + \"static/media/stop.6a9c7c47.svg\";","import React from 'react'\n\nimport './Settings.css'\n\n\nconst Settings = ({\n  timerDuration,\n  timerThreshold,\n  timerDirection,\n  setTimerDuration,\n  setTimerThreshold,\n  setTimerDirection,\n}) => {\n\n  const renderTimeSegmentInput = (segmentKey, timeObj, onChange) => (<input type=\"number\"\n    className={`cd-settings-input cd-settings-input-${segmentKey}`}\n    key={segmentKey}\n    value={timeObj[segmentKey]}\n    onChange={onChange} />)\n\n  const renderDurationTimeSegmentInput = segmentKey => renderTimeSegmentInput(\n    segmentKey, timerDuration, e => setTimerDuration({\n      ...timerDuration,\n      [segmentKey]: +e.target.value,\n    }))\n\n  const renderThresholdTimeSegmentInput = segmentKey => renderTimeSegmentInput(\n    segmentKey, timerThreshold, e => setTimerThreshold({\n      ...timerThreshold,\n      [segmentKey]: +e.target.value,\n    }))\n\n\n  return (\n    <div className=\"cd-settings\">\n      {/* todo - the wrapper is part of the modal behavior; extract a modal component! */}\n      <div className=\"cd-settings-wrapper\">\n        <div\n          className=\"cd-settings-field\"\n          data-tip=\"sets the initial time for the timer (hours / minutes / seconds / milliseconds)\"\n          >\n          <label className=\"cd-settings-label\">initial duration</label>\n          <div className=\"cd-settings-input-box\">\n            {['hours', 'minutes', 'seconds', 'milliseconds']\n              .map(renderDurationTimeSegmentInput)}\n          </div>\n        </div>\n        <div\n          className=\"cd-settings-field\"\n          data-tip=\"a notification will be shown every time a lap exceeds this value (hours / minutes / seconds / milliseconds)\"\n          >\n          <label className=\"cd-settings-label\">lap threshold</label>\n          <div className=\"cd-settings-input-box\">\n            {['hours', 'minutes', 'seconds', 'milliseconds']\n              .map(renderThresholdTimeSegmentInput)}\n          </div>\n        </div>\n        <div\n          className=\"cd-settings-field\"\n          data-tip=\"whether to count backwards (the default) or forwards. experimental\"\n          >\n          <label\n            className=\"cd-settings-label\"\n            htmlFor=\"cd-settings-input-direction\"\n            >timer direction</label>\n          <input\n            className=\"cd-settings-input\"\n            type=\"checkbox\"\n            id=\"cd-settings-input-direction\"\n            data-checked=\"up\"\n            data-unchecked=\"down\"\n            onChange={e => setTimerDirection(e.target.checked ? 'up' : 'down')}\n            />\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport default Settings\n","import * as materialUiColors from 'material-ui-colors'\n\n\nconst colorNames = [\n  'red',\n  'pink',\n  'purple',\n  'deepPurple',\n  'indigo',\n  'blue',\n  'lightBlue',\n  'cyan',\n  'teal',\n  'green',\n  'lightGreen',\n  'lime',\n  'yellow',\n  'amber',\n  'orange',\n  'deepOrange',\n  'brown',\n  'grey',\n  'blueGrey',\n]\n\nconst colorLevels = [\n  // '50',\n  // '100',\n  // '200',\n  '300',\n  '400',\n  '500',\n  '600',\n  '700',\n  '800',\n  '900',\n  'A100',\n  // 'A200',\n  // 'A400',\n  // 'A700',\n]\n\nfunction* generateIterator() {\n  let count = 0\n  for (let level of colorLevels) {\n    for (let name of colorNames) {\n      count++\n      yield materialUiColors[name][level]\n    }\n  }\n  return count;\n}\n\nconst flattenColorMap = () => [].concat(...colorLevels\n  .map(level => colorNames\n    .map(name => materialUiColors[name][level])))\n\n\nexport const flatMap = flattenColorMap()\n\nexport const iterator = generateIterator()\n","import React from 'react'\nimport { ReactSVG } from 'react-svg'\n\nimport {iterator as colors} from '../../lib/colors'\n\nimport './Icon.css'\n\n\n// true value signals that the icon color should be chosen internally\nconst resolveColor = color => color === true ?\n  colors.next().value :\n    color || 'var(--redhat)'\n\nconst Icon = ({ name, color, size = '24px', style = {}, className = '' }) => (<ReactSVG\n    src={require(`../../images/icons/${name}.svg`).default}\n    className={`cd-icon ${className}`}\n    style={{\n      '--icon-size': size,\n      '--icon-color': resolveColor(color),\n      ...style\n    }}\n  />)\n\n\nexport default Icon\n","import React from 'react'\n\nimport Icon from '../icon/Icon'\n\nimport './Button.css'\n\n\nconst baseIconProps = {\n  size: '50%',\n  color: '#ccc',\n}\n\nconst iconPropMap = {\n  play: { ...baseIconProps, style: {\n    marginRight: '-6%',\n    marginLeft: '6%',\n  }},\n  stop: { ...baseIconProps, size: '45%' },\n  pause: baseIconProps,\n  eject: { ...baseIconProps, style: {\n    marginRight: '-6%',\n    transform: 'rotate(90deg)',\n  }},\n  rotate: { ...baseIconProps, size: '65%', style: {\n    marginRight: '-4%',\n    marginLeft: '4%',\n    transform: 'rotate(90deg)',\n  }},\n  io: { ...baseIconProps, size: '60%', style: {\n    marginTop: '-6%',\n  } },\n  cog: { ...baseIconProps, size: '55%' },\n}\n\nconst Button = ({text = '', icon, tooltip, className = '', ...props}) => (<button\n  data-tip={tooltip}\n  className={`cd-button ${className}`}\n  {...props}\n  >{icon ? <Icon\n    className=\"cd-button-icon\"\n    name={icon} {...(\n      icon in iconPropMap ? iconPropMap[icon] : {}\n    )} /> : null}{text ? <span className=\"cd-button-text\">{text}</span> : null}</button>)\n\n\nexport default Button\n","import {useEffect} from 'react'\n\n\nconst useKeyboard = (listener = () => {}) => {\n  useEffect(() => {\n    const keyListener = ({keyCode: code}) => listener({code})\n\n    // keydown is best for capturing backspace and such\n    document.addEventListener('keydown', keyListener)\n    return () => {\n      document.removeEventListener('keydown', keyListener)\n    }\n  })\n}\n\n\nexport default useKeyboard\n","import {useEffect} from 'react'\n\n\nconst animationHandler = (name, callback) => ({animationName}) => {\n  if (animationName === name) {\n    callback()\n  }\n}\n\nconst useAnimationEvent = (name, onStart = () => {}, onEnd = () => {}, dependencies) => {\n  useEffect(() => {\n    const onAnimationStart = animationHandler(name, onStart)\n    const onAnimationEnd = animationHandler(name, onEnd)\n    document.addEventListener('animationstart', onAnimationStart)\n    document.addEventListener('animationend', onAnimationEnd)\n    return () => {\n      document.removeEventListener('animationstart', onAnimationStart)\n      document.removeEventListener('animationend', onAnimationEnd)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies)\n}\n\n\nexport default useAnimationEvent\n","import {useEffect} from 'react'\n\n\nconst useAnimationFrame = (tickCallback = () => {}, stopPredicate = () => 1, dependencies) => {\n  useEffect(() => {\n    let reqId = window.requestAnimationFrame(function step() {\n      tickCallback()\n      if (!stopPredicate()) {\n        reqId = window.requestAnimationFrame(step)\n      }\n    })\n    return () => {\n      window.cancelAnimationFrame(reqId)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies)\n}\n\n\nexport default useAnimationFrame\n","\n// mutates obj!\nexport const patch = (obj = {}, newObj = {}) => Object.assign(obj, newObj)\n\nexport const serialize = (...args) => args.length ? JSON.stringify(...args) : ''\n\nexport const deserialize = string => JSON.parse(string ?? '{}')\n","\nexport const durationAsString = (time, withSign) => {\n  const {hours, minutes, seconds, milliseconds} = durationAsMap(time)\n  return `${withSign ? (time < 0 ? '-' : ' ') : ''}${\n    [hours, minutes, seconds].join(':')\n  }.${milliseconds}${withSign ? ' ' : ''}`\n}\n\nexport const padNumber = (str, length = 2) => `${str}`.padStart(length, '0')\n\nexport const durationAsMap = time => {\n  const parseSegment = (timestamp, padLength) => {\n    return padNumber(Math.abs(Math[time < 0 ? 'ceil' : 'floor'](timestamp)), padLength)\n  }\n  return {\n    hours: parseSegment(time / 1000 / 60 / 60),\n    minutes: parseSegment((time / 1000 / 60) % 60),\n    seconds: parseSegment((time / 1000) % 60),\n    milliseconds: parseSegment(time % 1000, 3),\n  }\n}\n\nexport const mapAsDuration = ({hours, minutes, seconds, milliseconds}) => {\n  return (hours * 60 * 60 * 1000) + (minutes * 60 * 1000) + (seconds * 1000) + milliseconds\n}\n","import {patch} from './object'\nimport {durationAsString} from './util'\n\nconst init = ({\n  direction = 'up',\n  duration = 30 * 1000,\n  threshold = 5 * 1000,\n} = {}, stateSnapshot, eventsSnapshot) => {\n\n  let state = stateSnapshot ?? {}\n  let events = eventsSnapshot ?? []\n\n  const setState = newState => (state = newState)\n  const patchState = newState => patch(state, newState)\n  const setEvents = newEvents => (events = newEvents)\n\n  const resolveLaps = () => events\n    .reduce((accum, {type, timestamp}, index, arr) => {\n      const {type: prevType, timestamp: prevTimestamp} = arr[index - 1] ?? {}\n      if (\n          (prevType === 'start' && type === 'lap') ||\n          (prevType === 'lap' && ['lap', 'stop', 'pause'].includes(type))) {\n        accum.push({\n          endTime: timestamp,\n          startTime: prevTimestamp,\n          duration: timestamp - prevTimestamp,\n        })\n      }\n      return accum\n    }, [])\n\n  const getEvents = () => events ?? []\n  const getState = () => state ?? {}\n  const getLaps = resolveLaps\n\n  const _getEllapsedTime = () => events\n    .filter(({type}) => ['start', 'stop', 'pause', 'resume'].includes(type))\n    .reduce((accum, {timestamp, type}, index, arr) => {\n      const {timestamp: prevTimestamp, type: prevType} = arr[index - 1] ?? {}\n      if (state.running && !state.paused && !arr[index + 1]) {\n        accum += Date.now() - timestamp\n      } else if ((type === 'pause' || type === 'stop') &&\n        (prevType === 'start' || prevType === 'resume')) {\n        accum += (timestamp - prevTimestamp)\n      }\n      return accum\n    }, 0)\n\n  const getEllapsedTime = (ellapsedTime = _getEllapsedTime()) => direction === 'up' ? ellapsedTime : duration - ellapsedTime\n\n  const getEllapsedTimeString = () => durationAsString(getEllapsedTime(), true)\n\n  const command = (type, actionFn = () => {}, eventPredicate = () => 1) => (time = Date.now()) => {\n    actionFn(time)\n    return eventPredicate() && events.push({\n      type,\n      timestamp: time,\n    })\n  }\n\n  const start = command(\n    'start',\n    time => !state.running && patchState({running: true}))\n  const pause = command(\n    'pause',\n    () => state.running && !state.paused && patchState({paused: true}))\n  const resume = command(\n    'resume',\n    () => state.paused && state.paused && patchState({paused: false}))\n  const stop = command(\n    'stop',\n    time => state.running && patchState({running: false}))\n  const lap = command(\n    'lap',\n    void 0,\n    () => state.running && !state.paused)\n  const abortLap = () => {\n    if (state.running && !state.paused &&\n      (events[events.length - 1] || {}).type === 'lap') {\n      events.pop()\n    }\n  }\n  const clear = () => !state.running && setState({}) && setEvents([])\n\n  return {\n    start,\n    pause,\n    resume,\n    stop,\n    lap,\n    abortLap,\n    clear,\n    getState,\n    getLaps,\n    getEvents,\n    getEllapsedTime,\n    getEllapsedTimeString,\n  }\n}\n\nexport default init\n","import React, {useState} from 'react'\nimport useLocalStorage from 'use-local-storage'\nimport ReactTooltip from 'react-tooltip'\n\nimport useKeyboard from '../../hooks/useKeyboard'\nimport useAnimationEvent from '../../hooks/useAnimationEvent'\nimport useAnimationFrame from '../../hooks/useAnimationFrame'\nimport timer from '../../lib/timer'\nimport {flatMap as colors} from '../../lib/colors'\nimport {mapAsDuration, durationAsString} from '../../lib/util'\n\nimport Button from '../button/Button'\n\nimport './Timer.css'\n\n\nconst Timer = ({initialTime, lapThreshold, direction}) => {\n\n  const [timerState, setTimerState] = useLocalStorage('timer-state', {})\n  const [timerEvents, setTimerEvents] = useLocalStorage('timer-events', [])\n\n  const countdownTimer = timer({\n    direction,\n    duration: mapAsDuration(initialTime),\n    threshold: mapAsDuration(lapThreshold),\n  }, timerState, timerEvents)\n\n  const [notification, setNotification] = useState('')\n  const [laps, setLaps] = useState(countdownTimer.getLaps() ?? [])\n  const [isThresholdAnimationActive, setThresholdAnimationActive] = useState(false)\n  const [ellapsedTime, setEllapsedTime] = useState(countdownTimer.getEllapsedTimeString())\n\n\n  const patchUnmarshalledTimerState = () => {\n    setTimerState({...timerState, ...countdownTimer.getState()})\n    setTimerEvents([...countdownTimer.getEvents()])\n    setLaps([...countdownTimer.getLaps()])\n  }\n\n  const setUnmarshalledTimerState = () => {\n    setTimerState({...countdownTimer.getState()})\n    setTimerEvents([...countdownTimer.getEvents()])\n    setLaps([...countdownTimer.getLaps()])\n  }\n\n  const commandIconMap = {\n    clear: 'io',\n    stop: 'stop',\n    start: 'play',\n    lap: 'rotate',\n    pause: 'pause',\n    resume: 'eject',\n  }\n\n  const renderButton = (command, callback = patchUnmarshalledTimerState, props) => (<Button\n      icon={commandIconMap[command]}\n      tooltip={command}\n      className={'cd-timer-button'}\n      onMouseDown={() => countdownTimer[command] && countdownTimer[command]() && callback()}\n      {...props}\n    />)\n\n  // todo - move keybinding into Button\n  useKeyboard(({code}) => {\n    switch (code) {\n      case 32: // spacebar\n        countdownTimer.lap()\n        patchUnmarshalledTimerState()\n        break\n      case 8: // backspace\n        countdownTimer.abortLap()\n        patchUnmarshalledTimerState()\n        break\n      default:\n        break\n    }\n  })\n\n  useAnimationEvent(\n    'pulse',\n    () => setNotification('lap threshold reached'),\n    () => {\n      setNotification('')\n      setThresholdAnimationActive(false)\n    },\n  )\n\n  useAnimationFrame(\n    () => setEllapsedTime(countdownTimer.getEllapsedTimeString()),\n    () => !timerState.running || timerState.paused,\n    [timerState.running, timerState.paused])\n\n\n  return (\n    <div className=\"cd-timer\">\n      <pre className=\"cd-timer-time-display\">{ellapsedTime}</pre>\n      <nav className=\"cd-timer-controls\">\n        {renderButton(\n          timerState.running ?\n            timerState.paused ? 'resume' : 'pause' :\n              'start')}\n        {renderButton('stop')}\n        {renderButton('lap', () => {\n          patchUnmarshalledTimerState()\n          setThresholdAnimationActive(true)\n          setNotification('lap started, waiting for threshold...')\n          ReactTooltip.rebuild()\n        }, { style: {\n            animation: isThresholdAnimationActive ? `pulse 4s linear ${mapAsDuration(lapThreshold)}ms` : void 0,\n          }}\n        )}\n        {renderButton('clear', setUnmarshalledTimerState)}\n      </nav>\n\n      <span className={\n          `cd-timer-laps-spinner ${(timerEvents[timerEvents.length - 1] || {}).type === 'lap' ?\n            'cd-timer-laps-spinner-active' : ''}`\n          }\n        ><span className=\"cd-timer-laps-notification\">{notification}</span></span>\n\n      <div className={`cd-timer-laps ${laps.length ? '' : 'cd-timer-laps-hidden'}`}>\n        {(lapsSum => laps.map(({startTime, endTime, duration}, index, arr) => (<span\n          key={index}\n          className=\"cd-timer-lap\"\n          style={{\n            backgroundColor: index === 0 || colors[index],\n            paddingLeft: `${duration / (lapsSum / 100)}%`\n          }}\n          data-tip={`\nstart time: ${new Date(startTime).toLocaleString()}<br/>\nend time: ${new Date(endTime).toLocaleString()}<br/>\nduration: ${durationAsString(duration)}<br/>`\n          }\n          ></span>))).call(null, laps.reduce((accum, {duration}) => (accum += duration), 0))}\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n","import React, {useState, useEffect} from 'react'\nimport useLocalStorage from 'use-local-storage'\nimport ReactTooltip from 'react-tooltip'\n\nimport Settings from './pages/settings/Settings'\nimport Button from './components/button/Button'\nimport Timer from './components/timer/Timer'\n\nimport './App.css'\n\n\nconst App = () => {\n\n  const [timerThreshold, setTimerThreshold] = useLocalStorage('timer-threshold', {\n    hours: 0,\n    minutes: 0,\n    seconds: 3,\n    milliseconds: 45,\n  })\n  const [timerDuration, setTimerDuration] = useLocalStorage('timer-duration', {\n    hours: 0,\n    minutes: 0,\n    seconds: 12,\n    milliseconds: 345,\n  })\n  const [timerDirection, setTimerDirection] = useLocalStorage('timer-direction')\n\n  const [isSettingsVisible, setSettingsVisible] = useState(false)\n\n  useEffect(() => {\n    ReactTooltip.rebuild()\n  }, [isSettingsVisible])\n\n  return (\n    <div className=\"cd-app\">\n      <ReactTooltip\n        place=\"bottom\"\n        effect=\"solid\"\n        delayShow={420}\n        border\n        multiline\n      />\n      <header className=\"cd-app-header\">\n        <h1 className=\"cd-app-title\">countdown</h1>\n      </header>\n      <div className=\"cd-app-top-menu\">\n        <Button\n          icon=\"cog\"\n          tooltip={`${isSettingsVisible ? 'hide ' : 'show '}settings`}\n          onClick={() => setSettingsVisible(!isSettingsVisible)}\n        />\n      </div>\n      {isSettingsVisible ? (<Settings\n          timerDuration={timerDuration}\n          timerThreshold={timerThreshold}\n          timerDirection={timerDirection}\n          setTimerDuration={setTimerDuration}\n          setTimerThreshold={setTimerThreshold}\n          setTimerDirection={setTimerDirection}\n        />) : (<Timer\n          initialTime={timerDuration}\n          lapThreshold={timerThreshold}\n          direction={timerDirection}\n        />\n      )}\n    </div>\n  )\n}\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}